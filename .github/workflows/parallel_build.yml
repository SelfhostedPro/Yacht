name: Build Images for all supported platforms

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  release:
    types: ["prereleased"]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: set lower case repo name
        run: |
          echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          REPO: "${{ github.repository }}"
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.REPO_LC }}
          labels: |
            org.opencontainers.image.title=Yacht
            org.opencontainers.image.url=https://github.com/SelfhostedPro/yacht-nuxt/pkgs/container/yacht-nuxt
            org.opencontainers.image.description=A web interface for managing docker containers with an emphasis on making selfhosting easy
            org.opencontainers.image.documentation=https://yacht.sh/docs/
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.base.name=ghcr.io/selfhostedpro/yacht-nuxt:main
            org.opencontainers.image.vendor=SelfhostedPro
            sh.yacht.icon=https://raw.githubusercontent.com/SelfhostedPro/yacht-nuxt/main/assets/icons/yacht/mini.svg
            sh.yacht.self=true
            sh.yacht.ports.3000=WebUI
            sh.yacht.shell=/bin/sh

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.REPO_LC }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=registry,ref=${{ env.REPO_LC }}:buildcache
          cache-to: type=registry,ref=${{ env.REPO_LC }}:buildcache,mode=max
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: set lower case repo name
        run: |
          echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          REPO: "${{ github.repository }}"
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.REPO_LC }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create -t ${DOCKER_METADATA_OUTPUT_TAGS} \
            $(printf '${{ env.REGISTRY }}/${{ env.REPO_LC }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.REPO_LC }}:${{ steps.meta.outputs.version }}
